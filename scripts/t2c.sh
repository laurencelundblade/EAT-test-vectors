#!/bin/bash

header_file=eat_test_tokens.h
c_file=eat_test_tokens.c

cat <<EOC > $header_file
/* This file is automatically generated from CBOR-diag format 
 * files by the script t2c.sh. 
 */

EOC

cat <<EOC > $c_file
/* This file is automatically generated from CBOR-diag format 
 * files by the script t2c.sh. 
 */

EOC


for i in $@; do

    n1=$(basename $i)
    echo "n1 $n1"
    name=${n1%.*}

    if [[ $i == *.diag ]] ; then

    # TODO: error checking and reporting for bad diag

    # Add to the header file
        grep '^ */.*/ *$' $i | \
            sed -e 's/\//\/\*/' -e 's/\/ *$/\*\//' >> $header_file 
        echo "extern const char ${name}_token[];" >> $header_file
        size=`diag2cbor.rb $i | wc -c | tr -d ' '`
        echo "#define ${name}_SIZE $size" >> $header_file
        echo >> $header_file
        echo >> $header_file
        #TODO: include the diag in the header file as a comment
    

        # Add to the C file
        echo >> $c_file
        echo  "const unsigned char ${name}_token[] = {" >> $c_file
        diag2cbor.rb $i | xxd -i >> $c_file
        echo "};" >> $c_file

    else if [[ $i == *.c ]] ; then
        grep 'const.*char.* [a-z].*\[\]' $i |\
        sed -e 's/^/extern /' | sed -e 's/=.*$/;/' >> $header_file
        cpp $i | grep -v '^#' | xxd -r -p > /tmp/count
        size=`cat /tmp/count | wc -c`
        echo "#define ${name}_SIZE $size" >> $header_file
        echo >> $header_file
        echo >> $header_file

        cat $i >> $c_file
    fi
    fi

done


